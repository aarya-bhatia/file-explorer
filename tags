!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/aarya/repos/aarya-bhatia/file-explorer/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
%.o	Makefile	/^%.o: %.c$/;"	t
BINDIR	Makefile	/^BINDIR=.$/;"	m
CFLAGS	Makefile	/^CFLAGS=-c -std=c99 -Wall -pedantic -g -D_GNU_SOURCE$/;"	m
Callback	log.c	/^} Callback;$/;"	t	typeref:struct:__anon0fdff1180108	file:
L	log.c	/^} L;$/;"	v	typeref:struct:__anon0fdff1180208
LDFLAGS	Makefile	/^LDFLAGS=-lncurses -lm$/;"	m
LOG_DEBUG	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	e	enum:__anon0fdff11d0203
LOG_ERROR	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	e	enum:__anon0fdff11d0203
LOG_FATAL	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	e	enum:__anon0fdff11d0203
LOG_H	log.h	/^#define LOG_H$/;"	d
LOG_INFO	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	e	enum:__anon0fdff11d0203
LOG_TRACE	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	e	enum:__anon0fdff11d0203
LOG_USE_COLOR	log.h	/^#define LOG_USE_COLOR$/;"	d
LOG_VERSION	log.h	/^#define LOG_VERSION /;"	d
LOG_WARN	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	e	enum:__anon0fdff11d0203
MAX	util.h	/^#define MAX(/;"	d
MAX_CALLBACKS	log.c	/^#define MAX_CALLBACKS /;"	d	file:
MIN	util.h	/^#define MIN(/;"	d
OBJDIR	Makefile	/^OBJDIR=.$/;"	m
SRCDIR	Makefile	/^SRCDIR=.$/;"	m
TODOS	README.md	/^# TODOS$/;"	c
__anon0fdff1180108	log.c	/^typedef struct {$/;"	s	file:
__anon0fdff1180208	log.c	/^static struct {$/;"	s	file:
__anon0fdff11d0108	log.h	/^typedef struct {$/;"	s
__anon0fdff11d0203	log.h	/^enum { LOG_TRACE, LOG_DEBUG, LOG_INFO, LOG_WARN, LOG_ERROR, LOG_FATAL };$/;"	g
all	Makefile	/^all: main test$/;"	t
ap	log.h	/^  va_list ap;$/;"	m	struct:__anon0fdff11d0108	typeref:typename:va_list
bottom_window	main.c	/^WINDOW *bottom_window = NULL;$/;"	v	typeref:typename:WINDOW *
callbacks	log.c	/^  Callback callbacks[MAX_CALLBACKS];$/;"	m	struct:__anon0fdff1180208	typeref:typename:Callback[]	file:
change_dir	main.c	/^void change_dir(char *newdir)$/;"	f	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
dirname	main.c	/^char *dirname = NULL;$/;"	v	typeref:typename:char *
display_bottom	main.c	/^void display_bottom()$/;"	f	typeref:typename:void
display_files	main.c	/^void display_files()$/;"	f	typeref:typename:void
display_top	main.c	/^void display_top()$/;"	f	typeref:typename:void
file	log.h	/^  const char *file;$/;"	m	struct:__anon0fdff11d0108	typeref:typename:const char *
file_callback	log.c	/^static void file_callback(log_Event *ev) {$/;"	f	typeref:typename:void	file:
file_stats	main.c	/^struct stat *file_stats = NULL;$/;"	v	typeref:struct:stat *
file_vec	main.c	/^char **file_vec = NULL;$/;"	v	typeref:typename:char **
file_window	main.c	/^WINDOW *file_window = NULL;$/;"	v	typeref:typename:WINDOW *
fmt	log.h	/^  const char *fmt;$/;"	m	struct:__anon0fdff11d0108	typeref:typename:const char *
fn	log.c	/^  log_LogFn fn;$/;"	m	struct:__anon0fdff1180108	typeref:typename:log_LogFn	file:
get_human_size	util.c	/^void get_human_size(size_t value, char *buffer, size_t n)$/;"	f	typeref:typename:void
get_human_time	util.c	/^void get_human_time(struct timespec t, char *buffer, size_t n)$/;"	f	typeref:typename:void
get_parent	file.c	/^char *get_parent(const char *dirname)$/;"	f	typeref:typename:char *
get_perm_string	util.c	/^void get_perm_string(int perms, char *buffer, size_t n)$/;"	f	typeref:typename:void
hostname	main.c	/^char hostname[100];$/;"	v	typeref:typename:char[100]
init_event	log.c	/^static void init_event(log_Event *ev, void *udata) {$/;"	f	typeref:typename:void	file:
is_valid_dir	file.c	/^bool is_valid_dir(const char *dirname)$/;"	f	typeref:typename:bool
level	log.c	/^  int level;$/;"	m	struct:__anon0fdff1180108	typeref:typename:int	file:
level	log.c	/^  int level;$/;"	m	struct:__anon0fdff1180208	typeref:typename:int	file:
level	log.h	/^  int level;$/;"	m	struct:__anon0fdff11d0108	typeref:typename:int
level_colors	log.c	/^static const char *level_colors[] = {$/;"	v	typeref:typename:const char * []	file:
level_strings	log.c	/^static const char *level_strings[] = {$/;"	v	typeref:typename:const char * []	file:
line	log.h	/^  int line;$/;"	m	struct:__anon0fdff11d0108	typeref:typename:int
list_files	file.c	/^char **list_files(const char *dirname)$/;"	f	typeref:typename:char **
lock	log.c	/^  log_LockFn lock;$/;"	m	struct:__anon0fdff1180208	typeref:typename:log_LockFn	file:
lock	log.c	/^static void lock(void)   {$/;"	f	typeref:typename:void	file:
log_Event	log.h	/^} log_Event;$/;"	t	typeref:struct:__anon0fdff11d0108
log_LockFn	log.h	/^typedef void (*log_LockFn)(bool lock, void *udata);$/;"	t	typeref:typename:void (*)(bool lock,void * udata)
log_LogFn	log.h	/^typedef void (*log_LogFn)(log_Event *ev);$/;"	t	typeref:typename:void (*)(log_Event * ev)
log_add_callback	log.c	/^int log_add_callback(log_LogFn fn, void *udata, int level) {$/;"	f	typeref:typename:int
log_add_fp	log.c	/^int log_add_fp(FILE *fp, int level) {$/;"	f	typeref:typename:int
log_debug	log.h	/^#define log_debug(/;"	d
log_error	log.h	/^#define log_error(/;"	d
log_fatal	log.h	/^#define log_fatal(/;"	d
log_info	log.h	/^#define log_info(/;"	d
log_level_string	log.c	/^const char* log_level_string(int level) {$/;"	f	typeref:typename:const char *
log_log	log.c	/^void log_log(int level, const char *file, int line, const char *fmt, ...) {$/;"	f	typeref:typename:void
log_set_level	log.c	/^void log_set_level(int level) {$/;"	f	typeref:typename:void
log_set_lock	log.c	/^void log_set_lock(log_LockFn fn, void *udata) {$/;"	f	typeref:typename:void
log_set_quiet	log.c	/^void log_set_quiet(bool enable) {$/;"	f	typeref:typename:void
log_trace	log.h	/^#define log_trace(/;"	d
log_warn	log.h	/^#define log_warn(/;"	d
main	Makefile	/^main: main.o log.o util.o file.o$/;"	t
main	main.c	/^int main(int argc, const char *argv[])$/;"	f	typeref:typename:int
main	test.c	/^int main()$/;"	f	typeref:typename:int
max_files	main.c	/^int max_files;$/;"	v	typeref:typename:int
num_files	main.c	/^int num_files = 0;$/;"	v	typeref:typename:int
path_changed	main.c	/^int path_changed = 0;$/;"	v	typeref:typename:int
path_join	file.c	/^char *path_join(const char *current, const char *filename)$/;"	f	typeref:typename:char *
quiet	log.c	/^  bool quiet;$/;"	m	struct:__anon0fdff1180208	typeref:typename:bool	file:
rstrstr	util.c	/^const char *rstrstr(const char *str, const char *substr)$/;"	f	typeref:typename:const char *
selected	main.c	/^int selected = 0;$/;"	v	typeref:typename:int
stdout_callback	log.c	/^static void stdout_callback(log_Event *ev) {$/;"	f	typeref:typename:void	file:
tags	Makefile	/^tags:$/;"	t
test	Makefile	/^test: test.o log.o util.o file.o$/;"	t
time	log.h	/^  struct tm *time;$/;"	m	struct:__anon0fdff11d0108	typeref:struct:tm *
top_window	main.c	/^WINDOW *top_window = NULL;$/;"	v	typeref:typename:WINDOW *
udata	log.c	/^  void *udata;$/;"	m	struct:__anon0fdff1180108	typeref:typename:void *	file:
udata	log.c	/^  void *udata;$/;"	m	struct:__anon0fdff1180208	typeref:typename:void *	file:
udata	log.h	/^  void *udata;$/;"	m	struct:__anon0fdff11d0108	typeref:typename:void *
unlock	log.c	/^static void unlock(void) {$/;"	f	typeref:typename:void	file:
username	main.c	/^const char *username;$/;"	v	typeref:typename:const char *
vec_copy	util.c	/^char **vec_copy(char **dst, char **src)$/;"	f	typeref:typename:char **
vec_free	util.c	/^void vec_free(char **vec)$/;"	f	typeref:typename:void
vec_size	util.c	/^size_t vec_size(char **vec)$/;"	f	typeref:typename:size_t
